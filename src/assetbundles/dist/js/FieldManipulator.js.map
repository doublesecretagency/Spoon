{"version":3,"file":"/dist/js/FieldManipulator.js","mappings":"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","sources":["webpack:///./src/FieldManipulator.js"],"sourcesContent":["/**\n * Spoon plugin for Craft CMS\n *\n * @copyright Copyright (c) 2018, 2022 Double Secret Agency\n * @link      https://plugins.doublesecretagency.com/\n * @package   Spoon\n * @since     3.0.0\n */\n(function($){\n\n\n    if (typeof Spoon == 'undefined')\n    {\n        Spoon = {};\n    }\n\n    // noinspection JSVoidFunctionReturnValueUsed\n    /**\n     * Overrides the default Matrix ‘add block’ buttons with our grouped ones\n     * and keeps them up to date based on the current context.\n     *\n     * Also adds any field layouts that may exist for each block type\n     * in the current context.\n     */\n    Spoon.FieldManipulator = Garnish.Base.extend(\n        {\n\n            _handleMatrixInputInitProxy: null,\n            _handleMatrixInputBlockAddedProxy: null,\n\n            init: function(settings)\n            {\n                // Set up\n                this.setSettings(settings, Spoon.FieldManipulator.defaults);\n\n                // Work out if we’re in the 'entrytype' context, so we can keep things up to date\n                if (this.settings.context.split(':')[0] === 'entrytype')\n                {\n                    // Listen to entry type switch\n                    Garnish.on(Craft.EntryTypeSwitcher, 'beforeTypeChange', $.proxy(function(ev)\n                    {\n                        this.settings.context = 'entrytype:' + ev.target.$typeSelect.val();\n                    }, this));\n                }\n\n                this._handleMatrixInputInitProxy = $.proxy(this, 'handleMatrixInputInit');\n                this._handleMatrixInputBlockAddedProxy = $.proxy(this, 'handleMatrixInputBlockAdded');\n\n                Garnish.on(Craft.MatrixInput, 'afterInit', this._handleMatrixInputInitProxy);\n                Garnish.on(Craft.MatrixInput, 'blockAdded', this._handleMatrixInputBlockAddedProxy);\n\n                if (typeof Craft.SuperTable !== \"undefined\") {\n                    if (typeof Craft.SuperTable.Input !== \"undefined\") {\n                        Garnish.on(Craft.SuperTable.Input, 'afterInit', this._handleMatrixInputInitProxy);\n                        Garnish.on(Craft.SuperTable.Input, 'blockAdded', this._handleMatrixInputBlockAddedProxy);\n                    } else if (typeof Craft.SuperTable.MatrixInputAlt !== \"undefined\") {\n                        Garnish.on(Craft.SuperTable.MatrixInputAlt, 'afterInit', this._handleMatrixInputInitProxy);\n                        Garnish.on(Craft.SuperTable.MatrixInputAlt, 'blockAdded', this._handleMatrixInputBlockAddedProxy);\n                    }\n                }\n\n                // If we are versioned we need to scrape the page as no events will fire\n                if (this.settings.versioned) {\n                    Garnish.$doc.find('.matrix-field').each($.proxy(function(idx, matrixField)\n                    {\n                        var $matrixField = $(matrixField);\n\n                        // sort out the button groups\n                        this.initBlockTypeGroups($matrixField);\n\n                        // initialize the blocks\n                        $matrixField.find('> .blocks > .matrixblock').each($.proxy(function(idx, matrixBlock)\n                        {\n                            this.initBlocks($(matrixBlock), $matrixField);\n                        }, this));\n\n                    }, this));\n                }\n            },\n\n\n            handleMatrixInputInit: function(ev)\n            {\n                var $matrixField = ev.target.$container,\n                    $blocks = ev.target.$blockContainer.children();\n\n                this.initBlockTypeGroups($matrixField);\n\n                $blocks.each($.proxy(function(key,block)\n                {\n                    this.initBlocks($(block), $matrixField);\n                }, this));\n            },\n\n            handleMatrixInputBlockAdded: function(ev)\n            {\n                var $matrixField = ev.target.$container,\n                    $block = $(ev.$block);\n\n                this.initBlocks($block, $matrixField);\n            },\n\n            initBlockTypeGroups: function($matrixField)\n            {\n\n                // check if we’ve already spooned this field\n                if ( !$matrixField.data('spooned') )\n                {\n\n                    // get matrix field handle out of the dom\n                    var matrixFieldHandle = this._getMatrixFieldName($matrixField);\n\n                    // Filter by the current matrix field\n                    var spoonedBlockTypes = [];\n\n                    // Check current context first\n                    if (typeof this.settings.blockTypes[this.settings.context] !== \"undefined\")\n                    {\n                        spoonedBlockTypes = $.grep(this.settings.blockTypes[this.settings.context], function(e){ return e.fieldHandle === matrixFieldHandle; });\n                    }\n\n                    // Check global context\n                    if (spoonedBlockTypes.length < 1 && typeof this.settings.blockTypes['global'] !== \"undefined\")\n                    {\n                        spoonedBlockTypes = $.grep(this.settings.blockTypes['global'], function(e){ return e.fieldHandle === matrixFieldHandle; });\n                    }\n\n                    // Check we have some config\n                    if ( spoonedBlockTypes.length >= 1 )\n                    {\n\n                        // add some data to tell us we’re spooned\n                        $matrixField.data('spooned', true);\n\n                        // store the data for when we loop the blocks themselves, so we don’t have to run all this again\n                        $matrixField.data('spoon-block-types', spoonedBlockTypes);\n\n                        // Only do the buttons if we’re not versioned\n                        if (!this.settings.versioned) {\n\n                            // find the original buttons\n                            var $origButtons = $matrixField.find('> .buttons').first();\n\n                            // hide the original ones and start the button spooning process\n                            $origButtons.addClass('hidden');\n\n                            // make our own container, not using .buttons as it gets event bindings\n                            // from MatrixInput.js that we really don't want\n                            var $spoonedButtonsContainer = $('<div class=\"buttons-spooned\" />').insertAfter($origButtons);\n\n                            // the main button group\n                            var $mainButtons = $('<div class=\"btngroup\" />').appendTo($spoonedButtonsContainer);\n\n                            // the secondary one, used when the container gets too small\n                            var $secondaryButtons = $('<div class=\"btn add icon menubtn hidden\">' + Craft.t('app', 'Add a block') + '</div>').appendTo($spoonedButtonsContainer),\n                                $secondaryMenu = $('<div class=\"menu spoon-secondary-menu\" />').appendTo($spoonedButtonsContainer);\n\n                            // loop each block type config\n                            for (var i = 0; i < spoonedBlockTypes.length; i++) {\n\n                                // check if group exists, add if not\n                                if ($mainButtons.find('[data-spooned-group=\"' + spoonedBlockTypes[i].groupName + '\"]').length === 0) {\n                                    // main buttons\n                                    var $mainMenuBtn = $('<div class=\"btn  menubtn\">' + Craft.t('site', spoonedBlockTypes[i]['groupName']) + '</div>').appendTo($mainButtons),\n                                        $mainMenu = $('<div class=\"menu\" data-spooned-group=\"' + spoonedBlockTypes[i]['groupName'] + '\" />').appendTo($mainButtons),\n                                        $mainUl = $('<ul />').appendTo($mainMenu);\n\n                                    // single group buttons\n                                    if (i !== 0) {\n                                        $('<hr>').appendTo($secondaryMenu);\n                                    }\n                                    $('<h6>' + Craft.t('site', spoonedBlockTypes[i]['groupName']) + '</h6>').appendTo($secondaryMenu);\n                                    var $secondaryUl = $('<ul/>').appendTo($secondaryMenu);\n                                }\n\n                                // make a link\n                                $li = $('<li><a data-type=\"' + spoonedBlockTypes[i].matrixBlockType.handle + '\">' + Craft.t('site', spoonedBlockTypes[i].matrixBlockType.name) + '</a></li>');\n\n                                // add it to the main list\n                                $li.appendTo($mainUl);\n\n                                // add a copy to the secondary one as well\n                                $li.clone().appendTo($secondaryUl);\n\n                            }\n\n                            // make the MenuBtns work\n                            $mainButtons.find('.menubtn').each(function() {\n\n                                new Garnish.MenuBtn($(this),\n                                    {\n                                        onOptionSelect: function(option) {\n                                            // find our type and click the correct original btn!\n                                            var type = $(option).data('type');\n                                            $origButtons.find('[data-type=\"' + type + '\"]').trigger('click');\n                                        }\n                                    });\n\n                            });\n\n                            new Garnish.MenuBtn($secondaryButtons,\n                                {\n                                    onOptionSelect: function(option) {\n                                        // find our type and click the correct original btn!\n                                        var type = $(option).data('type');\n                                        $origButtons.find('[data-type=\"' + type + '\"]').trigger('click');\n                                    }\n                                });\n\n                            // Bind a resize to the $matrixField so we can work out which groups UI to show\n                            this.addListener($matrixField, 'resize', $.proxy(function() {\n                                // Do we know what the button group width is yet?\n                                if (!$matrixField.data('spoon-main-buttons-width')) {\n                                    $matrixField.data('spoon-main-buttons-width', $mainButtons.width());\n\n                                    if (!$matrixField.data('spoon-main-buttons-width')) {\n                                        return;\n                                    }\n                                }\n\n                                // Check the widths and do the hide/show\n                                var fieldWidth = $matrixField.width(),\n                                    mainButtonsWidth = $matrixField.data('spoon-main-buttons-width');\n                                if (fieldWidth < mainButtonsWidth) {\n                                    $secondaryButtons.removeClass('hidden');\n                                    $mainButtons.addClass('hidden');\n                                } else {\n                                    $secondaryButtons.addClass('hidden');\n                                    $mainButtons.removeClass('hidden');\n                                }\n\n                            }, this));\n                        }\n\n                    }\n\n                }\n\n            },\n\n            initBlocks: function($matrixBlock, $matrixField)\n            {\n\n                if ( !$matrixBlock.data('spooned') )\n                {\n\n                    // Set this so we don’t re-run this\n                    $matrixBlock.data('spooned', true);\n\n                    // Get the cached spooned block types data for this whole field\n                    var spoonedBlockTypes = $matrixField.data('spoon-block-types');\n\n                    // Check we have some config\n                    if ( typeof spoonedBlockTypes !== \"undefined\" && spoonedBlockTypes.length >= 1 )\n                    {\n\n                        // First, sort out the settings menu\n                        if (!this.settings.versioned) {\n                            var $settingsBtn = $matrixBlock.find('.actions .settings.menubtn');\n                            this.initSettingsMenu($settingsBtn, spoonedBlockTypes, $matrixField);\n                        }\n\n                        // Second, get the current block’s type out of the dom, so we can do the field layout\n                        var matrixBlockTypeHandle = this._getMatrixBlockTypeHandle($matrixBlock);\n\n                        // Further filter our spoonedBlockTypes array by the current block’s type\n                        var spoonedBlockType = $.grep(spoonedBlockTypes, function(e){ return e.matrixBlockType.handle === matrixBlockTypeHandle; });\n\n                        // Initialize the field layout on the block\n                        if ( spoonedBlockType.length === 1 && spoonedBlockType[0].fieldLayoutId !== null )\n                        {\n                            $matrixBlock.data('spooned-block-type', spoonedBlockType[0]);\n                            this.initBlockFieldLayout($matrixBlock, $matrixField);\n                        }\n                        // If that failed, do another check against the global context\n                        else if (this.settings.blockTypes.hasOwnProperty('global'))\n                        {\n                            var matrixFieldHandle = this._getMatrixFieldName($matrixField);\n                            spoonedBlockTypes = $.grep(this.settings.blockTypes['global'], function(e){ return e.fieldHandle === matrixFieldHandle; });\n\n                            if ( spoonedBlockTypes.length >= 1 )\n                            {\n                                spoonedBlockType = $.grep(spoonedBlockTypes, function(e){ return e.matrixBlockType.handle === matrixBlockTypeHandle; });\n\n                                if ( spoonedBlockType.length === 1 && spoonedBlockType[0].fieldLayoutId !== null )\n                                {\n                                    $matrixBlock.data('spooned-block-type', spoonedBlockType[0]);\n                                    this.initBlockFieldLayout($matrixBlock, $matrixField);\n                                }\n                                else\n                                {\n                                    $matrixBlock.addClass('matrixblock-not-spooned');\n                                }\n                            }\n                            else\n                            {\n                                $matrixBlock.addClass('matrixblock-not-spooned');\n                            }\n                        }\n                        else\n                        {\n                            $matrixBlock.addClass('matrixblock-not-spooned');\n                        }\n\n                    }\n                    else\n                    {\n                        $matrixBlock.addClass('matrixblock-not-spooned');\n                    }\n\n                }\n                else\n                {\n                    // Fixes Redactor\n                    Garnish.$doc.trigger('scroll');\n                }\n\n            },\n\n            initBlockFieldLayout: function($matrixBlock, $matrixField)\n            {\n\n                var spoonedBlockType = $matrixBlock.data('spooned-block-type'),\n                    tabs = spoonedBlockType.fieldLayoutModel.tabs,\n                    fields = spoonedBlockType.fieldLayoutModel.fields;\n\n                // Check we have some tabs\n                // TODO: would be nice to not show the tab nav if there is only one tab\n                if ( tabs.length >= 1 )\n                {\n                    // Add a class so we can style\n                    $matrixBlock.addClass('matrixblock-spooned');\n\n                    if (this.settings.versioned) {\n                        $matrixBlock.addClass('matrixblock-spooned--disabled');\n                    }\n\n                    // Get a namespaced id\n                    var namespace = $matrixField.prop('id') + '-blocks-' + $matrixBlock.data('id'),\n                        spoonedNamespace = 'spoon-' + namespace;\n\n                    // Add the tabs container\n                    var $tabs = $('<ul class=\"spoon-tabs\"/>').appendTo($matrixBlock);\n\n                    // Make our own fields container and hide the native one, but keep its height\n                    var $spoonedFields = $('<div class=\"spoon-fields\"/>').css({ 'opacity' : 0 }).appendTo($matrixBlock),\n                        $fields = $matrixBlock.find('> .fields');\n                    $fields.css({ 'opacity' : 0 });\n                    $spoonedFields.addClass('fields');\n\n                    // Loop the tabs\n                    for (var i = 0; i < tabs.length; i++)\n                    {\n\n                        // Set up the first one to be active\n                        var navClasses = '',\n                            paneClasses = '';\n\n                        if (i===0)\n                        {\n                            navClasses = ' sel';\n                        }\n                        else\n                        {\n                            paneClasses = ' hidden';\n                        }\n\n                        // Add the tab nav, if there is more than one\n                        if (tabs.length > 1)\n                        {\n                            var $tabLi = $('<li/>').appendTo($tabs),\n                                $tabA = $('<a id=\"'+spoonedNamespace+'-'+i+'\" class=\"tab'+navClasses+'\">'+Craft.t('site', tabs[i].name)+'</a>')\n                                    .appendTo($tabLi)\n                                    .data('spooned-tab-target', '#'+spoonedNamespace+'-pane-'+i);\n                        }\n\n                        // Make a tab pane\n                        var $pane = $('<div id=\"'+spoonedNamespace+'-pane-'+i+'\" class=\"'+paneClasses+'\"/>').appendTo($spoonedFields);\n\n                        // Filter the fields array by their associated tabId and loop over them\n                        var tabFields = $.grep(fields, function(e){ return e.tabId === tabs[i].id; });\n                        for (var n = 0; n < tabFields.length; n++)\n                        {\n                            // Move the required field to our new container\n                            $fields.find('#' + namespace + '-fields-' + tabFields[n].handle + '-field').appendTo($pane);\n                        }\n\n                        // Now check for errors and update the tab if needed\n                        if ($pane.find('.field.has-errors').length > 0 && tabs.length > 1) {\n                            $tabA.addClass('error');\n                            $tabA.append(' <span data-icon=\"alert\" />');\n                        }\n\n                    }\n\n                    // Bind events to tab nav clicks\n                    if (tabs.length > 1)\n                    {\n                        this.addListener($tabs.find('a'), 'click', 'onTabClick');\n                    }\n\n                    // Force the fields to be removed from the layout\n                    $fields.hide();\n\n                    $spoonedFields.velocity({opacity: 1}, 'fast', $.proxy(function()\n                    {\n                        // Re-initialize the Craft UI\n                        Craft.initUiElements($spoonedFields);\n                    }, this));\n\n                }\n\n            },\n\n            onTabClick: function(ev)\n            {\n\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                var $tab = $(ev.target),\n                    $tabNav = $tab.parent().parent('.spoon-tabs'),\n                    targetSelector = $tab.data('spooned-tab-target'),\n                    $target = $(targetSelector);\n\n                // Toggle tab nav state\n                $tabNav.find('a.sel').removeClass('sel');\n                $tab.addClass('sel');\n\n                // Toggle the pane state\n                $target.siblings('div').addClass('hidden');\n                $target.removeClass('hidden');\n\n            },\n\n            initSettingsMenu: function($settingsBtn, spoonedBlockTypes, $matrixField)\n            {\n                Garnish.requestAnimationFrame($.proxy(function()\n                {\n                    // Get the Garnish.MenuBtn object\n                    var menuBtn = $settingsBtn.data('menubtn') || false;\n\n                    // If there wasn’t one then fail and try again\n                    if (!menuBtn)\n                    {\n                        this.initSettingsMenu($settingsBtn, spoonedBlockTypes, $matrixField);\n                        return;\n                    }\n\n                    // Get the field handle\n                    var matrixFieldHandle = this._getMatrixFieldName($matrixField);\n\n                    // Get the actual menu out of it once we get this far\n                    var $menu = menuBtn.menu.$container;\n                    $menu.addClass('spoon-settings-menu');\n\n                    // Hide all the li’s with add block links in them\n                    $menu.find('a[data-action=\"add\"]').parents('li').addClass('hidden');\n\n                    // Remove all the padded classes on hr’s\n                    $menu.find('hr').removeClass('padded');\n\n                    // Get the correct ul to play with in the menu container\n                    var $origUl = $menu.find('a[data-action=\"add\"]').parents('li').parent('ul');\n\n                    // Loop the given block type data and adjust the menu to match the groups\n                    for (var i = 0; i < spoonedBlockTypes.length; i++)\n                    {\n                        var handle = spoonedBlockTypes[i].matrixBlockType.handle;\n\n                        // Make a new group ul if needed\n                        if ( $menu.find('[data-spooned-group=\"'+spoonedBlockTypes[i].groupName+'\"]').length === 0 )\n                        {\n                            var nestedSettingsHandles = $.grep(this.settings.nestedSettingsHandles, function(a){ return a === matrixFieldHandle; });\n                            if (nestedSettingsHandles.length) {\n                                var $newUl = $('<ul class=\"padded hidden\" data-spooned-group=\"'+spoonedBlockTypes[i].groupName+'\" />');\n                                if (i!==0)\n                                {\n                                    $('<hr/>').insertBefore($origUl);\n                                }\n\n                                var $groupHeading = $('<a class=\"fieldtoggle\">' + Craft.t('site', spoonedBlockTypes[i].groupName) + '</a>');\n                                $groupHeading.insertBefore($origUl);\n\n                                $newUl.insertBefore($origUl);\n\n                                this.addListener($groupHeading, 'click', function(event) {\n                                    var $trigger = $(event.currentTarget),\n                                        $target = $trigger.next('ul');\n\n                                    if ($target.hasClass('hidden')) {\n                                        $target.removeClass('hidden');\n                                        $trigger.addClass('expanded');\n                                    } else {\n                                        $target.addClass('hidden');\n                                        $trigger.removeClass('expanded');\n                                    }\n                                });\n                            } else {\n                                var $newUl = $('<ul class=\"padded\" data-spooned-group=\"'+spoonedBlockTypes[i].groupName+'\" />');\n                                if (i!==0)\n                                {\n                                    $('<hr/>').insertBefore($origUl);\n                                }\n                                $('<h6>' + Craft.t('site', spoonedBlockTypes[i].groupName) + '</h6>').insertBefore($origUl);\n                                $newUl.insertBefore($origUl);\n                            }\n\n                        }\n\n                        // Add the li\n                        var $li = $menu.find('a[data-type=\"'+handle+'\"]').parents('li');\n\n                        $newUl.append($li);\n                        $li.removeClass('hidden');\n                    }\n\n                }, this));\n            },\n\n            /**\n             * This simply returns a fieldHandle if it can get one or false if not\n             */\n            _getMatrixFieldName: function($matrixField)\n            {\n\n                var matrixFieldId = $matrixField.parentsUntil('.field').parent().prop('id'),\n                    parts = matrixFieldId.split(\"-\");\n\n                // Matrix inside Something (e.g. Super Table) inside Matrix\n                if (parts.length === 9) {\n                    var matrixFieldHandle = parts[parts.length-8] + '-' + parts[parts.length-5] + '-' + parts[parts.length-2];\n                }\n                // Matrix inside Something (e.g. Super Table)\n                else if (parts.length === 6) {\n                    var matrixFieldHandle = parts[parts.length-5] + '-' + parts[parts.length-2];\n                }\n                // Normal Matrix\n                else if (parts.length === 3) {\n                    var matrixFieldHandle = parts[parts.length-2];\n                }\n\n                if ( matrixFieldHandle !== '' )\n                {\n                    return matrixFieldHandle;\n                }\n                else\n                {\n                    return false;\n                }\n            },\n\n            /**\n             * Returns the block type handle for a given $matrixBlock\n             */\n            _getMatrixBlockTypeHandle: function($matrixBlock)\n            {\n                var blockTypeHandle = $matrixBlock.data('type');\n\n                if ( typeof blockTypeHandle == 'string' )\n                {\n                    return blockTypeHandle;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n\n        },\n        {\n            defaults: {\n                blockTypes: null,\n                context: false,\n                versioned: false,\n                nestedSettingsHandles: []\n            }\n        });\n\n})(jQuery);\n"],"names":["$","Spoon","FieldManipulator","Garnish","Base","extend","_handleMatrixInputInitProxy","_handleMatrixInputBlockAddedProxy","init","settings","setSettings","defaults","context","split","on","Craft","EntryTypeSwitcher","proxy","ev","target","$typeSelect","val","MatrixInput","SuperTable","Input","MatrixInputAlt","versioned","$doc","find","each","idx","matrixField","$matrixField","initBlockTypeGroups","matrixBlock","initBlocks","handleMatrixInputInit","$container","$blocks","$blockContainer","children","key","block","handleMatrixInputBlockAdded","$block","data","matrixFieldHandle","_getMatrixFieldName","spoonedBlockTypes","blockTypes","grep","e","fieldHandle","length","$origButtons","first","addClass","$spoonedButtonsContainer","insertAfter","$mainButtons","appendTo","$secondaryButtons","t","$secondaryMenu","i","groupName","$mainMenuBtn","$mainMenu","$mainUl","$secondaryUl","$li","matrixBlockType","handle","name","clone","MenuBtn","onOptionSelect","option","type","trigger","addListener","width","fieldWidth","mainButtonsWidth","removeClass","$matrixBlock","$settingsBtn","initSettingsMenu","matrixBlockTypeHandle","_getMatrixBlockTypeHandle","spoonedBlockType","fieldLayoutId","initBlockFieldLayout","hasOwnProperty","tabs","fieldLayoutModel","fields","namespace","prop","spoonedNamespace","$tabs","$spoonedFields","css","$fields","navClasses","paneClasses","$tabLi","$tabA","$pane","tabFields","tabId","id","n","append","hide","velocity","opacity","initUiElements","onTabClick","preventDefault","stopPropagation","$tab","$tabNav","parent","targetSelector","$target","siblings","requestAnimationFrame","menuBtn","$menu","menu","parents","$origUl","nestedSettingsHandles","a","$newUl","insertBefore","$groupHeading","event","$trigger","currentTarget","next","hasClass","matrixFieldId","parentsUntil","parts","blockTypeHandle","jQuery"],"sourceRoot":""}